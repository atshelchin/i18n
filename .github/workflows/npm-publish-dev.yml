name: Publish Dev Package

on:
  push:
    branches:
      - main
    # Skip if commit message starts with version number (from npm version)
    # This prevents double publishing when creating release tags
    tags-ignore:
      - '**'

jobs:
  publish-dev:
    runs-on: ubuntu-latest
    # Skip if commit is a version bump from npm version command
    if: ${{ !startsWith(github.event.head_commit.message, 'v') && !contains(github.event.head_commit.message, '[skip ci]') }}
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Install Playwright browsers
        run: bunx playwright install --with-deps chromium

      - name: Run type check
        run: bun run check

      - name: Run linter
        run: bun run lint

      - name: Run tests
        run: bun run test:unit -- --run

      - name: Build package
        run: bun run prepack

      - name: Set dev version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          # Get short commit SHA
          SHORT_SHA=$(git rev-parse --short HEAD)
          # Get timestamp
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          # Create dev version: current-version-dev.timestamp.sha
          DEV_VERSION="${CURRENT_VERSION}-dev.${TIMESTAMP}.${SHORT_SHA}"

          echo "Publishing dev version: ${DEV_VERSION}"

          # Update package.json version
          npm version $DEV_VERSION --no-git-tag-version

      - name: Publish to npm with dev tag
        run: npm publish --tag dev --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Output published version
        run: |
          PUBLISHED_VERSION=$(node -p "require('./package.json').version")
          echo "âœ… Published @shelchin/i18n@${PUBLISHED_VERSION}"
          echo "ðŸ“¦ Install with: npm install @shelchin/i18n@dev"
